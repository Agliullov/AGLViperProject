//
//  FirstInteractor.swift
//  AGLViperProject
//
//  Created by Раис Аглиуллов on 30.09.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FirstBusinessLogic {
    func fetchData(request: First.FetchData.Request)
    func openDetails(request: First.OpenDetails.Request)

}

protocol FirstDataStore {
    var data: Options? { get set }
}

class FirstInteractor: FirstDataStore {
    var data: Options?
    
    var presenter: FirstPresentationLogic?
    private let worker: FirstWorker = FirstWorker()
    
}

extension FirstInteractor: FirstBusinessLogic {
    
    func fetchData(request: First.FetchData.Request) {
        DispatchQueue.main.async {
            self.worker.getLocalFirstData { (firstData) in
                let response = First.FetchData.Response(mainData: firstData ?? [])
                self.presenter?.presentFetchedData(response: response)
            }
        }
    }
    
    func openDetails(request: First.OpenDetails.Request) {
        worker.getLocalFirstData { (firstData) in
            guard let data = firstData?[request.index] else { return }
            self.data = data
            
            let response = First.OpenDetails.Response(data: data)
            self.presenter?.presentOpenDetails(response: response)
        }
    }
    
}
