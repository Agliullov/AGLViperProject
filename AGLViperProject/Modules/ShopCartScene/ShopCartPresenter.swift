//
//  ShopCartPresenter.swift
//  AGLViperProject
//
//  Created by Раис Аглиуллов on 13.10.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShopCartPresentationLogic {
    func presentShopCartFetchedData(response: ShopCart.FetchShopCartData.Response)
    func presentShopCartControllerMode(response: ShopCart.ChangeControllerMode.Response)
}

class ShopCartPresenter {
    
    weak var viewController: ShopCartDisplayLogic?
    
    private func getSection(options: [HomeScreenData]) -> [ShopCart.DisplayedSection] {
        var sections: [ShopCart.DisplayedSection] = []
        for option in options {
            let descriptionCell = ShopCart.DisplayedSection.DisplayedCell(type: .description(title: option.title, priceText: option.priceText))
            let section = ShopCart.DisplayedSection(type: .shopCart, cells: [descriptionCell])
            sections.append(section)
        }
        return sections
    }
}

extension ShopCartPresenter: ShopCartPresentationLogic {
    
    func presentShopCartFetchedData(response: ShopCart.FetchShopCartData.Response) {
        let sections = getSection(options: response.detailsData)
        
        let viewModel = ShopCart.FetchShopCartData.ViewModel(displayedSection: sections)
        self.viewController?.displayShopCartFetchedData(viewModel: viewModel)
    }
    
    func presentShopCartControllerMode(response: ShopCart.ChangeControllerMode.Response) {
        let viewModel = ShopCart.ChangeControllerMode.ViewModel(mode: response.mode)
        self.viewController?.displayShopCartControllerMode(viewModel: viewModel)
    }
}
