//
//  RestaurantMenuPresenter.swift
//  AGLViperProject
//
//  Created by Раис Аглиуллов on 01.10.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RestaurantMenuPresentationLogic {
    func presentFetchedRestaurantMenuData(response: RestaurantMenuModel.FetchRestaurantMenuData.Response)
    func presentChangeControllerMode(response: RestaurantMenuModel.ChangeControllerMode.Response)
    func presentOpenRestaurantMenuDetails(response: RestaurantMenuModel.OpenRestaurantMenuDetails.Response)
    
}

class RestaurantMenuPresenter {
    
    weak var viewController: RestaurantMenuDisplayLogic?
    
    private func getSection(options: [HomeScreenData]) -> [RestaurantMenuModel.DisplayedSection] {
        var sections: [RestaurantMenuModel.DisplayedSection] = []
        for option in options {
            let descriptionCell = RestaurantMenuModel.DisplayedSection.DisplayedCell(type: .description(title: option.title, imageName: option.imageName, descriptionText: option.description, priceText: option.priceText))
            let section = RestaurantMenuModel.DisplayedSection(type: .details, cells: [descriptionCell], header: option.header, footer: option.footer)
            sections.append(section)
        }
        return sections
    }
}

extension RestaurantMenuPresenter: RestaurantMenuPresentationLogic {
    
    func presentFetchedRestaurantMenuData(response: RestaurantMenuModel.FetchRestaurantMenuData.Response) {
        let sections = getSection(options: response.restaurantMenuData)
        
        let viewModel = RestaurantMenuModel.FetchRestaurantMenuData.ViewModel(displayedSection: sections)
        viewController?.displayRestaurantMenuFetchedData(viewModel: viewModel)
    }
    
    func presentChangeControllerMode(response: RestaurantMenuModel.ChangeControllerMode.Response) {
        let viewModel = RestaurantMenuModel.ChangeControllerMode.ViewModel(mode: response.mode)
        viewController?.displayRestaurantMenuChangeControllerMode(viewModel: viewModel)
    }
    
    func presentOpenRestaurantMenuDetails(response: RestaurantMenuModel.OpenRestaurantMenuDetails.Response) {
        let viewModel = RestaurantMenuModel.OpenRestaurantMenuDetails.ViewModel(restaurantMenuData: response.restaurantMenuData)
        viewController?.displayRestaurantMenuOpenDetails(viewModel: viewModel)
    }
    
}
