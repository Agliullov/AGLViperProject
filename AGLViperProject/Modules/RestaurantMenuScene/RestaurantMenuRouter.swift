//
//  RestaurantMenuRouter.swift
//  AGLViperProject
//
//  Created by Раис Аглиуллов on 01.10.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol RestaurantMenuRoutingLogic {
    func routeToRestaurantDetails(index: Int)
    func routeToBasketVC()
}

protocol RestaurantMenuDataPassing {
    var dataStore: RestaurantMenuDataStore? { get }
}

class RestaurantMenuRouter: NSObject, RestaurantMenuDataPassing {
    
    weak var viewController: RestaurantMenuViewController?
    var dataStore: RestaurantMenuDataStore?
    
    // MARK: Navigation
    
    func navigateToRestaurantDetails(source: RestaurantMenuViewController, destination: RestaurantDetailsViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func navigateToBasket(source: RestaurantMenuViewController, destination: BasketViewController) {
        let navigationVC = UINavigationController(rootViewController: destination)
        source.navigationController?.present(navigationVC, animated: true, completion: nil)
    }
    
    // MARK: Passing data
    
    func passDataToRestaurantDetails(source: RestaurantMenuDataStore, destination: inout RestaurantDetailsDataStore, index: Int) {
        destination.option = source.restaurantMenuData?[index]
    }
}

extension RestaurantMenuRouter: RestaurantMenuRoutingLogic {
    
    func routeToRestaurantDetails(index: Int) {
        guard let viewController = self.viewController else { return }
        
        let detailsVC = RestaurantDetailsViewController()
        guard let sourceDataStore = self.dataStore, var destinationDataStore = detailsVC.router?.dataStore else { return }
        
        self.passDataToRestaurantDetails(source: sourceDataStore, destination: &destinationDataStore, index: index)
        self.navigateToRestaurantDetails(source: viewController, destination: detailsVC)
    }
    
    func routeToBasketVC() {
        guard let viewController = self.viewController else { return }
        
        let basketVC = BasketViewController()
        self.navigateToBasket(source: viewController, destination: basketVC)
    }
    
}
