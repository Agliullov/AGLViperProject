//
//  BasketRouter.swift
//  AGLViperProject
//
//  Created by Раис Аглиуллов on 13.10.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol BasketRoutingLogic {
    func routeToBasketDetails(index: Int)
}

protocol BasketDataPassing {
    var dataStore: BasketDataStore? { get }
}

class BasketRouter: NSObject, BasketDataPassing {
    
    weak var viewController: BasketViewController?
    var dataStore: BasketDataStore?
    
    // MARK: Navigation
    
    func navigateToBasketDetails(source: BasketViewController, destination: RestaurantDetailsViewController)
    {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    // MARK: Passing data
    
    func passDataToBasketDetails(source: BasketDataStore, destination: inout RestaurantDetailsDataStore, index: Int)
    {
        // destination.option = source.basketData[index]
    }
}

extension BasketRouter: BasketRoutingLogic {
    func routeToBasketDetails(index: Int) {
        guard let viewController = self.viewController else { return }
        
        let detailsVC = RestaurantDetailsViewController()
        guard let sourceDataStore = self.dataStore, var destinationDataStore = detailsVC.router?.dataStore else { return }
        
        self.passDataToBasketDetails(source: sourceDataStore, destination: &destinationDataStore, index: index)
        self.navigateToBasketDetails(source: viewController, destination: detailsVC)
    }
}
