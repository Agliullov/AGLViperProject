//
//  SecondPresenter.swift
//  AGLViperProject
//
//  Created by Раис Аглиуллов on 01.10.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SecondPresentationLogic {
    func presentFetchedData(response: Second.FetchData.Response)
    func presentChangeControllerMode(response: Second.ChangeControllerMode.Response)
    
}

class SecondPresenter {
    
    weak var viewController: SecondDisplayLogic?
    
    private func getSection(option: Options?) -> [Second.DisplayedSection] {
        guard let option = option else { return [] }
        
        var sections: [Second.DisplayedSection] = []
        let titleCell = Second.DisplayedSection.DisplayedCell(type: .info(title: option.title))
        let descriptionCell = Second.DisplayedSection.DisplayedCell(type: .description(title: option.title, imageName: option.imageName))
        
        let section = Second.DisplayedSection(type: .details, cells: [titleCell, descriptionCell], header: nil, footer: nil)
        sections.append(section)
        return sections
    }
}

extension SecondPresenter: SecondPresentationLogic {
    
    func presentFetchedData(response: Second.FetchData.Response) {
        let sections = getSection(option: response.secondData)
        
        let viewModel = Second.FetchData.ViewModel(displayedSection: sections)
        viewController?.displaySecondFetchedData(viewModel: viewModel)
    }
    
    func presentChangeControllerMode(response: Second.ChangeControllerMode.Response) {
        let viewModel = Second.ChangeControllerMode.ViewModel(mode: response.mode)
        viewController?.displayChangeControllerMode(viewModel: viewModel)
    }
    
}
