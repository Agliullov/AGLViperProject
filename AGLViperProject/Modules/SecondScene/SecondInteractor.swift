//
//  SecondInteractor.swift
//  AGLViperProject
//
//  Created by Раис Аглиуллов on 01.10.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SecondBusinessLogic {
    func fetchData(request: Second.FetchData.Request)

}

protocol SecondDataStore {
    var option: Options? { get set }
}

class SecondInteractor: SecondDataStore {
    
    var presenter: SecondPresentationLogic?
    private let worker: SecondWorker = SecondWorker()
    
    private var mutableOption: Options?
    
    var option: Options? {
        didSet {
            guard option != nil, mutableOption == nil else { return }
            mutableOption = option
        }
    }
    
    private var mode: ControllerMode = .viewing {
        didSet {
            let response = Second.ChangeControllerMode.Response(mode: self.mode)
            self.presenter?.presentChangeControllerMode(response: response)
        }
    }
}

extension SecondInteractor: SecondBusinessLogic {
    
    func fetchData(request: Second.FetchData.Request) {
        self.mode = .updating
        DispatchQueue.main.asyncAfter(deadline: .now() + 1) {
            let response = Second.FetchData.Response(secondData: self.mutableOption)
            self.presenter?.presentFetchedData(response: response)
            self.mode = .viewing
        }
    }

}
