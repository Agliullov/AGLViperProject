//
//  RestaurantDetailsPresenter.swift
//  AGLViperProject
//
//  Created by Раис Аглиуллов on 09.10.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RestaurantDetailsPresentationLogic {
    func presentRestaurantDetailsControllerMode(response: RestaurantDetailsModel.ChangeControllerMode.Response)
    func presentFetchedRestaurantDetailsData(response: RestaurantDetailsModel.FetchRestaurantDetailsData.Response)
    func presentSetedBasket(response: RestaurantDetailsModel.SetBasketData.Response)
}

class RestaurantDetailsPresenter {
    
    weak var viewController: RestaurantDetailsDisplayLogic?
    
    private func getSection(option: HomeScreenData?) -> [RestaurantDetailsModel.DisplayedSection] {
        guard let option = option else { return [] }
        
        var sections: [RestaurantDetailsModel.DisplayedSection] = []
        
        let descriptionCell = RestaurantDetailsModel.DisplayedSection.DisplayedCell(type: .details(title: option.title, imageName: option.imageName, descriptionText: option.details, price: option.price,  priceText: option.priceText, header: option.header, footer: option.footer, count: option.count))
        
        let section = RestaurantDetailsModel.DisplayedSection(type: .details, cells: [descriptionCell])
        sections.append(section)
        return sections
    }
}

extension RestaurantDetailsPresenter: RestaurantDetailsPresentationLogic {
    
    func presentRestaurantDetailsControllerMode(response: RestaurantDetailsModel.ChangeControllerMode.Response) {
        let viewModel = RestaurantDetailsModel.ChangeControllerMode.ViewModel(mode: response.mode)
        viewController?.displayRestaurantDetailsControllerMode(viewModel: viewModel)
    }
    
    func presentFetchedRestaurantDetailsData(response: RestaurantDetailsModel.FetchRestaurantDetailsData.Response) {
        let sections = self.getSection(option: response.detailsData)
        let viewModel = RestaurantDetailsModel.FetchRestaurantDetailsData.ViewModel(displayedSection: sections)
        viewController?.displayRestaurantDetailsFetchedData(viewModel: viewModel)
    }
    
    func presentSetedBasket(response: RestaurantDetailsModel.SetBasketData.Response) {
        let viewModel = RestaurantDetailsModel.SetBasketData.ViewModel(detailsData: response.detailsData)
        self.viewController?.displaySetedBasket(viewModel: viewModel)
    }
}
